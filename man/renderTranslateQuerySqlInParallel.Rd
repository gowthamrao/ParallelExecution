% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RenderTranslateQuerySqlInParallel.R
\name{renderTranslateQuerySqlInParallel}
\alias{renderTranslateQuerySqlInParallel}
\title{Render SQL Queries in Parallel Across Multiple CDM Sources}
\usage{
renderTranslateQuerySqlInParallel(
  cdmSources,
  sequence = 1,
  sql,
  tempEmulationSchema = getOption("sqlRenderTempEmulationSchema"),
  databaseIds = getListOfDatabaseIds(),
  userService = "OHDSI_USER",
  passwordService = "OHDSI_PASSWORD",
  ...
)
}
\arguments{
\item{cdmSources}{A dataframe containing details of the CDM sources.}

\item{sequence}{A sequence number to filter the CDM sources. Defaults to 1.}

\item{sql}{The SQL query string to be executed.}

\item{tempEmulationSchema}{Temporary schema for SQL Render emulation. Obtained from the global option 'sqlRenderTempEmulationSchema' if not provided.}

\item{databaseIds}{A vector of database IDs to filter the CDM sources. Obtained from the getListOfDatabaseIds() function if not provided.}

\item{userService}{The user service credential key, defaults to "OHDSI_USER".}

\item{passwordService}{The password service credential key, defaults to "OHDSI_PASSWORD".}

\item{...}{Additional parameters that may be passed to the SQL rendering and translation functions.}
}
\description{
This function executes SQL queries in parallel across multiple Common Data Model (CDM) sources. It filters
the CDM sources based on specified criteria, renders and translates SQL queries for each source, and then
executes them in parallel using a cluster of worker nodes.
}
